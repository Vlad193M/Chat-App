rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId && !exists(/databases/$(database)/documents/users/$(request.auth.uid));
      allow update, delete: if request.auth.uid == userId;
    }
    
    match /users/{userId}/userChats {
      allow list: if request.auth.uid == userId && request.auth.token.email_verified == true;
    }
    
    match /users/{userId}/userChats/{userChatId} {
      allow read: if request.auth.uid == userId && request.auth.token.email_verified == true;

      allow create: if !exists(/databases/$(database)/documents/users/$(userId)/userChats/$(request.resource.id))
        && request.auth.token.email_verified == true;

      allow update, delete: if (request.auth.uid == userId || request.resource.data.receiverId == request.auth.uid)
        && request.auth.token.email_verified == true;
    }

    match /chats/{chatId} {
      allow read, write: if request.auth != null && request.auth.token.email_verified == true && request.auth.token.email_verified == true;
    }

    match /chats/{chatId}/messages {
      allow list: if request.auth != null && request.auth.token.email_verified == true;
    }
    
    match /chats/{chatId}/messages/{message} {
      allow read, write, list: if request.auth != null && request.auth.token.email_verified == true && request.auth.token.email_verified == true;
    }
    
    // match /chats/{chatId} {
    // 	allow create: if request.auth != null;
    // 	allow write, read: if request.auth != null;
    //   // allow read: if request.auth != null && request.auth.uid in resource.data.participants;
    // }
  }
}